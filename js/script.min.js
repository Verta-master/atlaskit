$(window).scroll(function(){
  var menu = $(".header__js");
  var top = $(".header__js .header__top");
  return function () {
    if ( $(this).scrollTop() > 60 ) {
      menu.addClass("header--fix-top");
      top.slideDown(150);
    }
    else {
      menu.removeClass("header--fix-top");
      top.removeAttr("style");
    }
  }
}());


// Подключение SVG в local storage

;
(function (window, document) {
	'use strict';

	var file = '/custom/my/img/sprite-svg.svg',
		revision = 8;

	if (!document.createElementNS || !document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect)
		return true;

	var isLocalStorage = 'localStorage' in window && window['localStorage'] !== null,
		request,
		data,
		insertIT = function () {
			document.body.insertAdjacentHTML('afterbegin', data);
		},
		insert = function () {
			if (document.body) insertIT();
			else document.addEventListener('DOMContentLoaded', insertIT);
		};

	if (isLocalStorage && localStorage.getItem('inlineSVGrev') == revision) {
		data = localStorage.getItem('inlineSVGdata');
		if (data) {
			insert();
			return true;
		}
	}

	try {
		request = new XMLHttpRequest();
		request.open('GET', file, true);
		request.onload = function () {
			if (request.status >= 200 && request.status < 400) {
				data = request.responseText;
				insert();
				if (isLocalStorage) {
					localStorage.setItem('inlineSVGdata', data);
					localStorage.setItem('inlineSVGrev', revision);
				}
			}
		}
		request.send();
	} catch (e) {}

}(window, document));

svg4everybody();

$('.slider__list').show().slick({
  dots: true,
  dotsClass: 'slider__dots',
  infinite: true,
  adaptiveHeight: true,
  fade: false,
  cssEase: 'linear',
  prevArrow: '<button type="button" class="slider__prev"><span class="slider__arrow"></span></button>',
  nextArrow: '<button type="button" class="slider__next"><span class="slider__arrow"></span></button>',
  responsive: [
    {
      breakpoint: 480,
      settings: {
        arrows: false,
        dots: false,
      }
    },
  ]
});

/* ========================================================================
 * Модальное окно. Основано на Bootstrap: modal.js v3.3.7
 * Изменения минимальны: имена классов, событий, методов...
 * ========================================================================
 * Copyright 2011-2017 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options             = options
    this.$body               = $(document.body)
    this.$element            = $(element)
    // this.$dialog             = this.$element.find('.modal-dialog')
    this.$dialog             = this.$element.find('.modal__dialog')
    this.$backdrop           = null
    this.isShown             = null
    this.originalBodyPad     = null
    this.scrollbarWidth      = 0
    this.ignoreBackdropClick = false

    // if (this.options.remote) {
    //   this.$element
    //     // .find('.modal-content')
    //     .find('.modal__content')
    //     .load(this.options.remote, $.proxy(function () {
    //       // this.$element.trigger('loaded.bs.modal')
    //       this.$element.trigger('loaded.nth.modal')
    //     }, this))
    // }
  }

  Modal.VERSION  = '3.3.7'

  // Modal.TRANSITION_DURATION = 300
  // Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    // var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })
    var e    = $.Event('show.nth.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    // this.$body.addClass('modal-open')
  $("body").css("width", $("body").width())
    this.$body.addClass('js-modal-open')


    this.escape()
    this.resize()

    // this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))
    this.$element.on('click.dismiss.nth.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    // this.$dialog.on('mousedown.dismiss.bs.modal', function () {
    this.$dialog.on('mousedown.dismiss.nth.modal', function () {
      // that.$element.one('mouseup.dismiss.bs.modal', function (e) {
      that.$element.one('mouseup.dismiss.nth.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      // var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        // .show()
        .css('display', 'block')
        .scrollTop(0)

      that.adjustDialog()

      // if (transition) {
        that.$element[0].offsetWidth // force reflow
      // }

      that.$element.addClass('modal--open')

      that.enforceFocus()

      // var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })
      var e = $.Event('shown.nth.modal', { relatedTarget: _relatedTarget })

      // transition ?
      //   that.$dialog // wait for modal to slide in
      //     .one('bsTransitionEnd', function () {
      //       that.$element.trigger('focus').trigger(e)
      //     })
      //     .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    // e = $.Event('hide.bs.modal')
    e = $.Event('hide.nth.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    // $(document).off('focusin.bs.modal')
    $(document).off('focusin.nth.modal')

    this.$element
      .removeClass('modal--open')
      // .off('click.dismiss.bs.modal')
      .off('click.dismiss.nth.modal')
      // .off('mouseup.dismiss.bs.modal')
      .off('mouseup.dismiss.nth.modal')

    // this.$dialog.off('mousedown.dismiss.bs.modal')
    this.$dialog.off('mousedown.dismiss.nth.modal')

    // $.support.transition && this.$element.hasClass('fade') ?
    //   this.$element
    //     .one('bsTransitionEnd', $.proxy(this.hideModal, this))
    //     .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      // .off('focusin.bs.modal') // guard against infinite focus loop
      .off('focusin.nth.modal') // guard against infinite focus loop
      // .on('focusin.bs.modal', $.proxy(function (e) {
      .on('focusin.nth.modal', $.proxy(function (e) {
        if (document !== e.target &&
            this.$element[0] !== e.target &&
            !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      // this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
      this.$element.on('keydown.dismiss.nth.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      // this.$element.off('keydown.dismiss.bs.modal')
      this.$element.off('keydown.dismiss.nth.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      // $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
      $(window).on('resize.nth.modal', $.proxy(this.handleUpdate, this))
    } else {
      // $(window).off('resize.bs.modal')
      $(window).off('resize.nth.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('js-modal-open')
    $("body").css("width", 'auto')
      that.resetAdjustments()
      that.resetScrollbar()
      // that.$element.trigger('hidden.bs.modal')
      that.$element.trigger('hidden.nth.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    // var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      // var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        // .addClass('modal-backdrop ' + animate)
        .addClass('modal__backdrop ')
        .appendTo(this.$body)

      // this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
      this.$element.on('click.dismiss.nth.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      // if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      // this.$backdrop.addClass('modal__backdrop--shown')

      if (!callback) return

      // doAnimate ?
      //   this.$backdrop
      //     .one('bsTransitionEnd', callback)
      //     .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('modal--open')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      // $.support.transition && this.$element.hasClass('fade') ?
      //   this.$backdrop
      //     .one('bsTransitionEnd', callbackRemove)
      //     .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      // var data    = $this.data('bs.modal')
      var data    = $this.data('nth.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      // if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (!data) $this.data('nth.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal             = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  // $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
  $(document).on('click.nth.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
    // var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())
    var option  = $target.data('nth.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    // $target.one('show.bs.modal', function (showEvent) {
    $target.one('show.nth.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      // $target.one('hidden.bs.modal', function () {
      $target.one('hidden.nth.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

$(window).on("load", function() {
  $(".footer").after($(".modal"));
});

$( document ).ready(function() {

  var t0;

  $('#toTop').on('click', function(event){
    event.preventDefault();
    $('html, body').animate({scrollTop:0}, 300);
  });

  $(window).on('scroll', function(){
    clearTimeout(t0);
    t0 = setTimeout(function () {
        showScrollTopButton();
      }, 100);
  });

  showScrollTopButton();

  function showScrollTopButton(){
    if ( $(document).scrollTop() >= 900 ) {
      $('#toTop').fadeIn();
    }
    else {
      $('#toTop').fadeOut();
    }
  }

});

$('.product-gallery__photos').show().slick({
  slidesToShow: 1,
  slidesToScroll: 1,
  adaptiveHeight: true,
  arrows: false,
  fade: true,
  asNavFor: '.product-gallery__miniatures'
});

$('.product-gallery__miniatures').show().slick({
  slidesToShow: 4,
  slidesToScroll: 1,
  adaptiveHeight: true,
  asNavFor: '.product-gallery__photos',
  focusOnSelect: true,
  prevArrow: '<button type="button" class="product-gallery__arrow  product-gallery__prev"></button>',
  nextArrow: '<button type="button" class="product-gallery__arrow  product-gallery__next"></button>',

  responsive: [
    {
      breakpoint: 480,
      settings: {
        slidesToShow: 3
      }
    }
  ]

});

$('.tabs').flexTabs({
  breakpoint: 480
});

$('.menu-mobile').hcOffcanvasNav({
  maxWidth: 960,
  labelBack: "Назад",
  insertClose: false
});

$(document).ready(function() {
  $('.menu-main__list').superfish({
    delay: 100,
    cssArrows:  false,
    disableHI:  false,
    speed: 'fast',
    speedOut: 'fast',
    animation:     {opacity:'show'},
    animationOut:  {opacity:'hide'},
  });
});

$('.brend-carousel__list').show().slick({
  dots: false,
  infinite: true,
  autoplay: true,
  slidesToShow: 5,
  slidesToScroll: 1,
  speed: 500,
  autoplaySpeed: 7000,
  fade: false,
  cssEase: 'linear',
  prevArrow: '<button type="button" class="brend-carousel__prev"><span class="brend-carousel__arrow"></span></button>',
  nextArrow: '<button type="button" class="brend-carousel__next"><span class="brend-carousel__arrow"></span></button>',
  responsive: [
    {
      breakpoint: 481,
      settings: {
        slidesToShow: 1,
      }
    },
    {
      breakpoint: 581,
      settings: {
        slidesToShow: 2,
      }
    },
    {
      breakpoint: 769,
      settings: {
        slidesToShow: 3,
      }
    },
    {
      breakpoint: 961,
      settings: {
        slidesToShow: 4,
      }
    },
  ]
});

$(document).on('click', '.to-favorites', function () {
  $(this).toggleClass('to-favorites--active');
});

if(Cookies.get('view-switch') == 'list') {
  get_list()
}

function get_grid(){
  $('.view-switch__list').removeClass('view-switch__button--active');
  $('.view-switch__grid').addClass('view-switch__button--active');

  $('.catalog .product-block').removeClass('product-block--view_list');
}

function get_list(){
  $('.view-switch__grid').removeClass('view-switch__button--active');
  $('.view-switch__list').addClass('view-switch__button--active');

  $('.catalog .product-block').addClass('product-block--view_list');
}

$(document).on('click', '.view-switch__list', function () {
    Cookies.set('view-switch', 'list');
    get_list()
});

$(document).on('click', '.view-switch__grid', function () {
    Cookies.set('view-switch', 'grid');
    get_grid();
});

$('.filter__toggle').bind('click', function () {
  var $menu_list = $('.filter__wrapper');
  return function () {
    $menu_list.slideToggle();
  }
}());

// $(".filter__slider").slider({
//   range: true,
//   min: 0,
//   step: 20,
//   max: 700,
//   values: [100, 400]
// });


$(document).on('click', '.product-card__num .num__minus', function(){
  var count = $(this).parents('.num').find('input');
  if(count.val() > 1)
  {
    count.val(count.val() * 1 - 1);
  }

});

$(document).on('click', '.product-card__num .num__plus', function(){
  var count = $(this).parents('.num').find('input');
  count.val(count.val() * 1 + 1);

});

function addedToCart() {
  $(".product-block__button").on('click', function (){
    $img = $(this).closest(".product-block").find("img:visible").attr('src');
    $title = $(this).closest(".product-block").find(".product-block__title").text();
    $modal = $("#modal-added-to-cart");
    $message = $modal.find(".modal__title");

    $modal.find(".added-to-cart__image img").attr('src', $img);
    $modal.find(".added-to-cart__title").text($title);

    diafan_ajax.success['shop_buy'] = function(form, response)
    {
      if( response.data ) {
        $modal.removeClass("added-to-cart--error");
        $success_message = $message.attr("data-title");
        $message.text($success_message);
      }

      else {
        $modal.addClass("added-to-cart--error");
        $error_message = $message.attr("data-error-title");
        $message.text($error_message);
      }

      $modal.modal('show');
    }
  });

  $(".product-card__to-cart").on('click', function (){
    $img = $(".product-gallery__photos .slick-current img").attr('src');
    $title = $(".page__title").text();
    $modal = $("#modal-added-to-cart");
    $message = $modal.find(".modal__title");

    $modal.find(".added-to-cart__image img").attr('src', $img);
    $modal.find(".added-to-cart__title").text($title);

    diafan_ajax.success['shop_buy'] = function(form, response)
    {
      if( response.data ) {
        $modal.removeClass("added-to-cart--error");
        $success_message = $message.attr("data-title");
        $message.text($success_message);
      }

      else {
        $modal.addClass("added-to-cart--error");
        $error_message = $message.attr("data-error-title");
        $message.text($error_message);
      }

      $modal.modal('show');
    }
  });
}

addedToCart();

$(document).on('order_ajax_submit.after_last', function(e) {
  addedToCart();
});


